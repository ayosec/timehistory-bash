name: Release Assets

on:
  push:
    tags:
      - "v*"

jobs:
  release_draft:
    name: Create Release
    runs-on: ubuntu-18.04
    steps:
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Draft ${{ github.ref }}
          draft: true
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build:
    name: Package for ${{ matrix.os }}
    needs: release_draft
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - tarball
          - debian
          - ubuntu
          - fedora
          - opensuse/tumbleweed
    steps:
      - uses: actions/checkout@v2

      - name: Package.
        id: package
        run: |
          set -xe
          IMAGE="${{ matrix.os }}"
          if [ "$IMAGE" = tarball ]
          then
            IMAGE=debian:stable
            MAKE_TARBALL=1
          fi

          docker run --rm                        \
            -v "$PWD:/source"                    \
            -e MAKE_TARBALL="${MAKE_TARBALL:-0}" \
            -w /source                           \
            "$IMAGE"                             \
            pkg/build-release.sh

      - name: Upload asset.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_URL: ${{ needs.release_draft.outputs.upload_url }}
        run: |
          set -ex
          for ASSET in ASSETS/*
          do
            ASSET_NAME=$(basename "$ASSET")
            curl                                          \
              -X POST                                     \
              -H "Authorization: token $GITHUB_TOKEN"     \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$ASSET"                     \
              "${UPLOAD_URL/{*}?name=$ASSET_NAME"
          done
